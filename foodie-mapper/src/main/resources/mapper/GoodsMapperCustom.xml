<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iossocket.mapper.GoodsMapperCustom">
    <select id="queryGoodsComments" parameterType="Map" resultType="com.iossocket.vo.GoodsCommentVO">
        SELECT
            users.nick_name as nickName,
            users.avatar as avatar,
            goods_comments.comment_level as commentLevel,
            goods_comments.content as content,
            goods_comments.spec_name as specName,
            goods_comments.created_time as createdTime
        FROM
            goods_comments
        LEFT JOIN
            users
        ON
            goods_comments.user_id = users.id
        WHERE
            goods_comments.goods_id = #{paramsMap.goodsId}
        <if test=" paramsMap.level != null and paramsMap.level != '' ">
            AND goods_comments.comment_level = #{paramsMap.level}
        </if>
    </select>
    <select id="searchGoods" parameterType="Map" resultType="com.iossocket.vo.SearchGoodsVO">
        SELECT
            goods.id as goodsId,
            goods.name as goodsName,
            goods.sales as sales,
            goods_img.url as imgUrl,
            tempSpec.discount_price as price
        FROM
            goods
        LEFT JOIN
            goods_img
        ON
            goods.id = goods_img.goods_id
        LEFT JOIN
            (
                SELECT
                    goods_id,
                    MIN(discount_price) as discount_price
                FROM
                    goods_spec
                GROUP BY
                    goods_id
            ) tempSpec
        ON
            goods.id = tempSpec.goods_id
        WHERE
            goods_img.is_main = 1
        <if test=" paramsMap.keyword != null and paramsMap.keyword != '' ">
            AND goods.name LIKE '%${paramsMap.keyword}%'
        </if>
        ORDER BY
        <choose>
            <when test=" paramsMap.sort == &quot;c&quot; ">
                goods.sales DESC
            </when>
            <when test=" paramsMap.sort == &quot;p&quot; ">
                tempSpec.discount_price ASC
            </when>
            <otherwise>
                goods.name ASC
            </otherwise>
        </choose>
    </select>
    <select id="queryGoodsByThirdCategory" parameterType="Map" resultType="com.iossocket.vo.SearchGoodsVO">
        SELECT
            goods.id as goodsId,
            goods.name as goodsName,
            goods.sales as sellCounts,
            goods_img.url as imgUrl,
            tempSpec.discount_price as price
        FROM
            goods
        LEFT JOIN
            goods_img
        ON
            goods.id = goods_img.goods_id
        LEFT JOIN
            (
                SELECT
                    goods_id,
                    MIN(discount_price) as discount_price
                FROM
                    goods_spec
                GROUP BY
                    goods_id
            ) tempSpec
        ON
            goods.id = tempSpec.goods_id
        WHERE
            goods_img.is_main = 1
        AND
            goods.category_id = #{paramsMap.categoryId}
        ORDER BY
        <choose>
            <when test=" paramsMap.sort == &quot;c&quot; ">
                goods.sales desc
            </when>
            <when test=" paramsMap.sort == &quot;p&quot; ">
                tempSpec.discount_price asc
            </when>
            <otherwise>
                goods.name asc
            </otherwise>
        </choose>
    </select>
    <select id="queryGoodsBySpecIds" parameterType="List" resultType="com.iossocket.vo.ShoppingCartVO">
        SELECT
            goods.id as goodsId,
            goods.`name` as goodsName,
            goods_img.url as goodsImgUrl,
            goods_spec.id as specId,
            goods_spec.`name` as specName,
            goods_spec.discount_price as discountPrice,
            goods_spec.origin_price as originPrice
        FROM
            goods_spec
        LEFT JOIN
            goods
        ON
            goods_spec.goods_id = goods.id
        LEFT JOIN
            goods_img
        ON
            goods_img.goods_id = goods.id
        WHERE
            goods_img.is_main = 1
        AND
            goods_spec.id
        IN
        <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
            #{specId}
        </foreach>
    </select>
    <update id="decreaseGoodsSpecStock">
        UPDATE
            goods_spec
        SET
            stock = stock - #{pendingCounts},
            updated_time = #{updatedTime}
        WHERE
            id = #{specId}
        AND
            stock >= #{pendingCounts}
    </update>
</mapper>